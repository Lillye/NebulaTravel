// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NebulaTravel.Data;
using System;

namespace NebulaTravel.Migrations
{
    [DbContext(typeof(NebulaDbContext))]
    [Migration("20180613162542_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NebulaTravel.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Overview");

                    b.Property<string>("Picture");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("NebulaTravel.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailableTickets");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int?>("DestinationId");

                    b.Property<string>("Name");

                    b.Property<string>("Overview");

                    b.Property<int?>("SpaceshipId");

                    b.HasKey("FlightId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("SpaceshipId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("NebulaTravel.Models.Spaceship", b =>
                {
                    b.Property<int>("SpaceshipId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Overview");

                    b.Property<string>("Picture");

                    b.HasKey("SpaceshipId");

                    b.ToTable("Spaceships");
                });

            modelBuilder.Entity("NebulaTravel.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Login");

                    b.Property<int>("PasswordHashCode");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NebulaTravel.Models.UserFlight", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("FlightId");

                    b.HasKey("UserId", "FlightId");

                    b.HasIndex("FlightId");

                    b.ToTable("UserFlights");
                });

            modelBuilder.Entity("NebulaTravel.Models.Flight", b =>
                {
                    b.HasOne("NebulaTravel.Models.Destination", "Destination")
                        .WithMany("Flights")
                        .HasForeignKey("DestinationId");

                    b.HasOne("NebulaTravel.Models.Spaceship", "Spaceship")
                        .WithMany("Flights")
                        .HasForeignKey("SpaceshipId");
                });

            modelBuilder.Entity("NebulaTravel.Models.UserFlight", b =>
                {
                    b.HasOne("NebulaTravel.Models.Flight", "Flight")
                        .WithMany("UserFlights")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NebulaTravel.Models.User", "User")
                        .WithMany("UserFlights")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
